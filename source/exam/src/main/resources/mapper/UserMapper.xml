<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alvis.exam.repository.UserMapper" >
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_uuid" property="userUuid" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birth_day" property="birthDay" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="last_active_time" property="lastActiveTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="image_path" property="imagePath" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_level" property="userLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_uuid, user_name, password, real_name, age, sex, birth_day, phone, last_active_time,
    create_time, modify_time, role, image_path, status, user_level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.User"   useGeneratedKeys="true" keyProperty="id" >
    insert into t_user (id, user_uuid, user_name,
      password, real_name, age,
      sex, birth_day, phone,
      last_active_time, create_time, modify_time,
      role, image_path, status,
      user_level)
    values (#{id,jdbcType=INTEGER}, #{userUuid}::uuid, #{userName,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
      #{sex,jdbcType=INTEGER}, #{birthDay,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR},
      #{lastActiveTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP},
      #{role,jdbcType=INTEGER}, #{imagePath,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{userLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.User"   useGeneratedKeys="true" keyProperty="id" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userUuid != null" >
        user_uuid,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthDay != null" >
        birth_day,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="lastActiveTime != null" >
        last_active_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="imagePath != null" >
        image_path,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userUuid != null" >
        #{userUuid}::uuid,
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthDay != null" >
        #{birthDay,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="lastActiveTime != null" >
        #{lastActiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="imagePath != null" >
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.User" >
    update t_user
    <set >
      <if test="userUuid != null" >
        user_uuid = #{userUuid}::uuid,
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthDay != null" >
        birth_day = #{birthDay,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="lastActiveTime != null" >
        last_active_time = #{lastActiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="imagePath != null" >
        image_path = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.User" >
    update t_user
    set user_uuid = #{userUuid}::uuid,
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      birth_day = #{birthDay,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      last_active_time = #{lastActiveTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=INTEGER},
      image_path = #{imagePath,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_level = #{userLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <select id="getAllUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
  </select>

  <select id="getUserById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where id=#{value}
  </select>

  <select id="getUserByUserName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where user_name=#{value} limit 1
  </select>

  <select id="getUserByUserNamePwd" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where user_name=#{username} and password=#{pwd} limit 1
  </select>

  <select id="getUserByUuid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_user
    where user_uuid=#{value}::uuid
  </select>


  <select id="userPageList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_user
    <where>
      <if test="name != null and name != ''">
        and  real_name like concat('%',#{name},'%')
      </if>
    </where>
    ORDER BY id
    <if test="offset != null and limit != null ">
      <bind name="patternAdd" value="limit*offset"/>
      limit #{limit} OFFSET #{offset}
    </if>
  </select>


  <select id="userPageCount" resultType="java.lang.Integer">
    select count(*) from t_user
    <where>
      <if test="name != null and name != ''">
        and real_name like concat('%', #{name}, '%')
      </if>
    </where>
  </select>


  <select id="userPage" resultMap="BaseResultMap" parameterType="com.alvis.exam.viewmodel.admin.user.UserPageRequestVM">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_user
    <where>
      <if test="userName != null and userName != ''">
        and user_name like concat('%',#{userName},'%')
      </if>
      <if test="role != null ">
        and role= #{role}
      </if>
    </where>
  </select>



  <insert id="insertUser" parameterType="com.alvis.exam.domain.User"
          useGeneratedKeys="true" keyProperty="id">
		insert into t_user
		(user_uuid,user_name,password,real_name,age, last_active_time)
		values
		(#{userUuid}::uuid,#{userName},#{password},#{realName},#{age},#{lastActiveTime})
	</insert>

  <insert id="insertUsers" parameterType="java.util.List"
          useGeneratedKeys="true" keyProperty="id">
    insert into t_user
    (user_uuid,user_name,password,real_name,age,last_active_time)
    values
    <foreach collection="list" item="item" index="index"
             separator=",">
      (#{item.userUuid}::uuid,#{item.userName},#{item.password},#{item.realName},#{item.age},
      #{item.lastActiveTime})
    </foreach>
  </insert>


  <update id="updateUser" parameterType="com.alvis.exam.domain.User">
    update t_user
    <set>
      <if test="realName != null">real_name = #{realName},</if>
      <if test="age != null">age = #{age},</if>
      <if test="lastActiveTime != null">last_active_time = #{lastActiveTime},</if>
    </set>
    where id = #{id}
  </update>


  <update id="updateUsersAge">
    update t_user set age = #{age} where id in
    <foreach item="id" collection="idslist" open="(" separator=","
             close=")">
      #{id}
    </foreach>
  </update>


  <delete id="deleteUsersByIds">
    delete from t_user where id in
    <foreach item="id" collection="list" open="(" separator=","
             close=")">
      #{id}
    </foreach>
  </delete>

  <select id="selectAllCount"  resultType="java.lang.Integer">
		SELECT count(*) from t_user
	</select>

</mapper>
