<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alvis.exam.repository.ExamPaperQuestionCustomerAnswerMapper" >
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.ExamPaperQuestionCustomerAnswer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="question_score" property="questionScore" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="text_content_id" property="textContentId" jdbcType="INTEGER" />
    <result column="exam_paper_id" property="examPaperId" jdbcType="INTEGER" />
    <result column="question_type" property="questionType" jdbcType="INTEGER" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="customer_score" property="customerScore" jdbcType="INTEGER" />
    <result column="exam_paper_answer_id" property="examPaperAnswerId" jdbcType="INTEGER" />
    <result column="do_right" property="doRight" jdbcType="BIT" />
    <result column="question_text_content_id" property="questionTextContentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, question_id, question_score, subject_id, create_time, create_user, text_content_id,
    exam_paper_id, question_type, answer, customer_score, exam_paper_answer_id, do_right,
    question_text_content_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_question_customer_answer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_exam_paper_question_customer_answer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.ExamPaperQuestionCustomerAnswer" useGeneratedKeys="true" keyProperty="id" >
    insert into t_exam_paper_question_customer_answer (id, question_id, question_score,
      subject_id, create_time, create_user,
      text_content_id, exam_paper_id, question_type,
      answer, customer_score, exam_paper_answer_id,
      do_right, question_text_content_id)
    values (#{id,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{questionScore,jdbcType=INTEGER},
      #{subjectId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER},
      #{textContentId,jdbcType=INTEGER}, #{examPaperId,jdbcType=INTEGER}, #{questionType,jdbcType=INTEGER},
      #{answer,jdbcType=VARCHAR}, #{customerScore,jdbcType=INTEGER}, #{examPaperAnswerId,jdbcType=INTEGER},
      #{doRight,jdbcType=BIT}, #{questionTextContentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.ExamPaperQuestionCustomerAnswer" useGeneratedKeys="true" keyProperty="id" >
    insert into t_exam_paper_question_customer_answer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="questionScore != null" >
        question_score,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="textContentId != null" >
        text_content_id,
      </if>
      <if test="examPaperId != null" >
        exam_paper_id,
      </if>
      <if test="questionType != null" >
        question_type,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="customerScore != null" >
        customer_score,
      </if>
      <if test="examPaperAnswerId != null" >
        exam_paper_answer_id,
      </if>
      <if test="doRight != null" >
        do_right,
      </if>
      <if test="questionTextContentId != null" >
        question_text_content_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="questionScore != null" >
        #{questionScore,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="textContentId != null" >
        #{textContentId,jdbcType=INTEGER},
      </if>
      <if test="examPaperId != null" >
        #{examPaperId,jdbcType=INTEGER},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="customerScore != null" >
        #{customerScore,jdbcType=INTEGER},
      </if>
      <if test="examPaperAnswerId != null" >
        #{examPaperAnswerId,jdbcType=INTEGER},
      </if>
      <if test="doRight != null" >
        #{doRight,jdbcType=BIT},
      </if>
      <if test="questionTextContentId != null" >
        #{questionTextContentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.ExamPaperQuestionCustomerAnswer" >
    update t_exam_paper_question_customer_answer
    <set >
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="questionScore != null" >
        question_score = #{questionScore,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="textContentId != null" >
        text_content_id = #{textContentId,jdbcType=INTEGER},
      </if>
      <if test="examPaperId != null" >
        exam_paper_id = #{examPaperId,jdbcType=INTEGER},
      </if>
      <if test="questionType != null" >
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="customerScore != null" >
        customer_score = #{customerScore,jdbcType=INTEGER},
      </if>
      <if test="examPaperAnswerId != null" >
        exam_paper_answer_id = #{examPaperAnswerId,jdbcType=INTEGER},
      </if>
      <if test="doRight != null" >
        do_right = #{doRight,jdbcType=BIT},
      </if>
      <if test="questionTextContentId != null" >
        question_text_content_id = #{questionTextContentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.ExamPaperQuestionCustomerAnswer" >
    update t_exam_paper_question_customer_answer
    set question_id = #{questionId,jdbcType=INTEGER},
      question_score = #{questionScore,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      text_content_id = #{textContentId,jdbcType=INTEGER},
      exam_paper_id = #{examPaperId,jdbcType=INTEGER},
      question_type = #{questionType,jdbcType=INTEGER},
      answer = #{answer,jdbcType=VARCHAR},
      customer_score = #{customerScore,jdbcType=INTEGER},
      exam_paper_answer_id = #{examPaperAnswerId,jdbcType=INTEGER},
      do_right = #{doRight,jdbcType=BIT},
      question_text_content_id = #{questionTextContentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>









  <select id="selectListByPaperAnswerId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_paper_question_customer_answer
    where exam_paper_answer_id = #{id,jdbcType=INTEGER}
  </select>


  <select id="studentPage" resultMap="BaseResultMap" parameterType="com.alvis.exam.viewmodel.student.question.answer.QuestionPageStudentRequestVM">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_exam_paper_question_customer_answer
    <where>
      and do_right=FALSE
      and create_user=#{createUser}
    </where>
  </select>


  <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id" >
    insert into t_exam_paper_question_customer_answer ( question_id, question_score,
    subject_id, create_time, create_user,
    text_content_id, exam_paper_id, question_type,
    answer, customer_score, exam_paper_answer_id ,
    do_right,question_text_content_id)
    values
    <foreach collection="list" item="item" index="index"
             separator=",">
      ( #{item.questionId,jdbcType=INTEGER}, #{item.questionScore,jdbcType=INTEGER},
      #{item.subjectId,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=INTEGER},
      #{item.textContentId,jdbcType=INTEGER}, #{item.examPaperId,jdbcType=INTEGER}, #{item.questionType,jdbcType=INTEGER},
      #{item.answer,jdbcType=VARCHAR}, #{item.customerScore,jdbcType=INTEGER}, #{item.examPaperAnswerId,jdbcType=INTEGER},
      #{item.doRight,jdbcType=BIT},#{item.questionTextContentId,jdbcType=INTEGER})
    </foreach>
  </insert>


  <select id="selectAllCount"  resultType="java.lang.Integer">
		SELECT count(*) from t_exam_paper_question_customer_answer
  </select>


  <select id="selectCountByDate"  resultType="com.alvis.exam.domain.KeyValue">
		SELECT create_time as name,COUNT(create_time) as value from
		        (
				  SELECT to_char(create_time,'YYYY-mm-dd') as create_time from t_exam_paper_question_customer_answer
					WHERE  create_time  between  #{startTime}  and  #{endTime}
				) a
		GROUP BY create_time
	</select>


</mapper>
