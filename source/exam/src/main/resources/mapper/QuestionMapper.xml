<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alvis.exam.repository.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.Question" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="question_type" property="questionType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="correct" property="correct" jdbcType="VARCHAR" />
    <result column="difficult" property="difficult" jdbcType="INTEGER" />
    <result column="info_text_content_id" property="infoTextContentId" jdbcType="INTEGER" />
    <result column="grade_level" property="gradeLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, question_type, create_time, subject_id, create_user, score, status, correct,
    difficult, info_text_content_id, grade_level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.Question"  useGeneratedKeys="true" keyProperty="id" >
    insert into t_question (id, question_type, create_time,
      subject_id, create_user, score,
      status, correct, difficult,
      info_text_content_id, grade_level)
    values (#{id,jdbcType=INTEGER}, #{questionType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{subjectId,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, #{score,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{correct,jdbcType=VARCHAR}, #{difficult,jdbcType=INTEGER},
      #{infoTextContentId,jdbcType=INTEGER}, #{gradeLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.Question"  useGeneratedKeys="true" keyProperty="id" >
    insert into t_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionType != null" >
        question_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="correct != null" >
        correct,
      </if>
      <if test="difficult != null" >
        difficult,
      </if>
      <if test="infoTextContentId != null" >
        info_text_content_id,
      </if>
      <if test="gradeLevel != null" >
        grade_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="correct != null" >
        #{correct,jdbcType=VARCHAR},
      </if>
      <if test="difficult != null" >
        #{difficult,jdbcType=INTEGER},
      </if>
      <if test="infoTextContentId != null" >
        #{infoTextContentId,jdbcType=INTEGER},
      </if>
      <if test="gradeLevel != null" >
        #{gradeLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.Question" >
    update t_question
    <set >
      <if test="questionType != null" >
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="correct != null" >
        correct = #{correct,jdbcType=VARCHAR},
      </if>
      <if test="difficult != null" >
        difficult = #{difficult,jdbcType=INTEGER},
      </if>
      <if test="infoTextContentId != null" >
        info_text_content_id = #{infoTextContentId,jdbcType=INTEGER},
      </if>
      <if test="gradeLevel != null" >
        grade_level = #{gradeLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.Question" >
    update t_question
    set question_type = #{questionType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      subject_id = #{subjectId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      correct = #{correct,jdbcType=VARCHAR},
      difficult = #{difficult,jdbcType=INTEGER},
      info_text_content_id = #{infoTextContentId,jdbcType=INTEGER},
      grade_level = #{gradeLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>




  <select id="page" resultMap="BaseResultMap" parameterType="com.alvis.exam.viewmodel.admin.question.QuestionPageRequestVM">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_question
    <where>
      <if test="id != null ">
        and id= #{id}
      </if>
      <if test="subjectId != null ">
        and subject_id= #{subjectId}
      </if>
      <if test="questionType != null ">
        and question_type= #{questionType}
      </if>
    </where>
  </select>



  <select id="selectByIds" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_question where id in
    <foreach item="id" collection="ids" open="(" separator=","
             close=")">
      #{id}
    </foreach>
  </select>


  <select id="selectAllCount"  resultType="java.lang.Integer">
		SELECT count(*) from t_question
	</select>

  <select id="selectCountByDate"  resultType="com.alvis.exam.domain.KeyValue">
		SELECT create_time as name,COUNT(create_time) as value from
		        (
				  SELECT to_char(create_time,'YYYY-mm-dd') as create_time from t_question
					WHERE  create_time  between  #{startTime}  and  #{endTime}
				) a
		GROUP BY create_time
	</select>

</mapper>
